/*
 * ZIQNI Webhook Services
 * Webhook subscriber services intended use is to assist in the creation of a subscriber service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.webhook.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ziqni.webhook.model.WebhookRequestBody;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * WebhookRequest
 */
@JsonPropertyOrder({
  WebhookRequest.JSON_PROPERTY_ACCOUNT_ID,
  WebhookRequest.JSON_PROPERTY_HEADERS,
  WebhookRequest.JSON_PROPERTY_POST_TO_URL,
  WebhookRequest.JSON_PROPERTY_AUTH,
  WebhookRequest.JSON_PROPERTY_BODY,
  WebhookRequest.JSON_PROPERTY_ON_EVENT_TYPE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class WebhookRequest {
  public static final String JSON_PROPERTY_ACCOUNT_ID = "accountId";
  private String accountId;

  public static final String JSON_PROPERTY_HEADERS = "headers";
  private Map<String, String> headers = new HashMap<>();

  public static final String JSON_PROPERTY_POST_TO_URL = "postToUrl";
  private String postToUrl;

  public static final String JSON_PROPERTY_AUTH = "auth";
  private Map<String, String> auth = null;

  public static final String JSON_PROPERTY_BODY = "body";
  private WebhookRequestBody body;

  public static final String JSON_PROPERTY_ON_EVENT_TYPE = "onEventType";
  private String onEventType;


  public WebhookRequest accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public WebhookRequest headers(Map<String, String> headers) {
    this.headers = headers;
    return this;
  }

  public WebhookRequest putHeadersItem(String key, String headersItem) {
    this.headers.put(key, headersItem);
    return this;
  }

   /**
   * Get headers
   * @return headers
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_HEADERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, String> getHeaders() {
    return headers;
  }


  @JsonProperty(JSON_PROPERTY_HEADERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHeaders(Map<String, String> headers) {
    this.headers = headers;
  }


  public WebhookRequest postToUrl(String postToUrl) {
    this.postToUrl = postToUrl;
    return this;
  }

   /**
   * Get postToUrl
   * @return postToUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_POST_TO_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPostToUrl() {
    return postToUrl;
  }


  @JsonProperty(JSON_PROPERTY_POST_TO_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPostToUrl(String postToUrl) {
    this.postToUrl = postToUrl;
  }


  public WebhookRequest auth(Map<String, String> auth) {
    this.auth = auth;
    return this;
  }

  public WebhookRequest putAuthItem(String key, String authItem) {
    if (this.auth == null) {
      this.auth = new HashMap<>();
    }
    this.auth.put(key, authItem);
    return this;
  }

   /**
   * Get auth
   * @return auth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AUTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getAuth() {
    return auth;
  }


  @JsonProperty(JSON_PROPERTY_AUTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuth(Map<String, String> auth) {
    this.auth = auth;
  }


  public WebhookRequest body(WebhookRequestBody body) {
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BODY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WebhookRequestBody getBody() {
    return body;
  }


  @JsonProperty(JSON_PROPERTY_BODY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBody(WebhookRequestBody body) {
    this.body = body;
  }


  public WebhookRequest onEventType(String onEventType) {
    this.onEventType = onEventType;
    return this;
  }

   /**
   * Get onEventType
   * @return onEventType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ON_EVENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOnEventType() {
    return onEventType;
  }


  @JsonProperty(JSON_PROPERTY_ON_EVENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOnEventType(String onEventType) {
    this.onEventType = onEventType;
  }


  /**
   * Return true if this WebhookRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookRequest webhookRequest = (WebhookRequest) o;
    return Objects.equals(this.accountId, webhookRequest.accountId) &&
        Objects.equals(this.headers, webhookRequest.headers) &&
        Objects.equals(this.postToUrl, webhookRequest.postToUrl) &&
        Objects.equals(this.auth, webhookRequest.auth) &&
        Objects.equals(this.body, webhookRequest.body) &&
        Objects.equals(this.onEventType, webhookRequest.onEventType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, headers, postToUrl, auth, body, onEventType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookRequest {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    postToUrl: ").append(toIndentedString(postToUrl)).append("\n");
    sb.append("    auth: ").append(toIndentedString(auth)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    onEventType: ").append(toIndentedString(onEventType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

