/*
 * ZIQNI Webhook Services
 * Webhook subscriber services intended use is to assist in the creation of a subscriber service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.webhook.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ziqni.webhook.model.AchievementCreated;
import com.ziqni.webhook.model.AchievementRewardClaimed;
import com.ziqni.webhook.model.AchievementRewardCreated;
import com.ziqni.webhook.model.AchievementRewardIssued;
import com.ziqni.webhook.model.AchievementTriggered;
import com.ziqni.webhook.model.CompetitionCancelled;
import com.ziqni.webhook.model.CompetitionCreated;
import com.ziqni.webhook.model.CompetitionFinished;
import com.ziqni.webhook.model.CompetitionRewardIssued;
import com.ziqni.webhook.model.CompetitionStarted;
import com.ziqni.webhook.model.ContestCancelled;
import com.ziqni.webhook.model.ContestCreated;
import com.ziqni.webhook.model.ContestFinalised;
import com.ziqni.webhook.model.ContestFinished;
import com.ziqni.webhook.model.ContestRewardClaimed;
import com.ziqni.webhook.model.ContestRewardCreated;
import com.ziqni.webhook.model.ContestRewardIssued;
import com.ziqni.webhook.model.ContestStarted;
import com.ziqni.webhook.model.NewMember;
import com.ziqni.webhook.model.NewProduct;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for WebhookRequestBody
 */
public class WebhookRequestBodyTest {
    private final WebhookRequestBody model = new WebhookRequestBody();

    /**
     * Model tests for WebhookRequestBody
     */
    @Test
    public void testWebhookRequestBody() {
        // TODO: test WebhookRequestBody
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'objectType'
     */
    @Test
    public void objectTypeTest() {
        // TODO: test objectType
    }

    /**
     * Test the property 'constraints'
     */
    @Test
    public void constraintsTest() {
        // TODO: test constraints
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'spaceName'
     */
    @Test
    public void spaceNameTest() {
        // TODO: test spaceName
    }

    /**
     * Test the property 'productId'
     */
    @Test
    public void productIdTest() {
        // TODO: test productId
    }

    /**
     * Test the property 'productRefId'
     */
    @Test
    public void productRefIdTest() {
        // TODO: test productRefId
    }

    /**
     * Test the property 'productName'
     */
    @Test
    public void productNameTest() {
        // TODO: test productName
    }

    /**
     * Test the property 'memberId'
     */
    @Test
    public void memberIdTest() {
        // TODO: test memberId
    }

    /**
     * Test the property 'memberRefId'
     */
    @Test
    public void memberRefIdTest() {
        // TODO: test memberRefId
    }

    /**
     * Test the property 'memberName'
     */
    @Test
    public void memberNameTest() {
        // TODO: test memberName
    }

    /**
     * Test the property 'competitionId'
     */
    @Test
    public void competitionIdTest() {
        // TODO: test competitionId
    }

    /**
     * Test the property 'competitionName'
     */
    @Test
    public void competitionNameTest() {
        // TODO: test competitionName
    }

    /**
     * Test the property 'awardId'
     */
    @Test
    public void awardIdTest() {
        // TODO: test awardId
    }

    /**
     * Test the property 'rewardId'
     */
    @Test
    public void rewardIdTest() {
        // TODO: test rewardId
    }

    /**
     * Test the property 'rewardTypeKey'
     */
    @Test
    public void rewardTypeKeyTest() {
        // TODO: test rewardTypeKey
    }

    /**
     * Test the property 'rewardTypeId'
     */
    @Test
    public void rewardTypeIdTest() {
        // TODO: test rewardTypeId
    }

    /**
     * Test the property 'rewardMetaData'
     */
    @Test
    public void rewardMetaDataTest() {
        // TODO: test rewardMetaData
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'rewardName'
     */
    @Test
    public void rewardNameTest() {
        // TODO: test rewardName
    }

    /**
     * Test the property 'contestId'
     */
    @Test
    public void contestIdTest() {
        // TODO: test contestId
    }

    /**
     * Test the property 'contestName'
     */
    @Test
    public void contestNameTest() {
        // TODO: test contestName
    }

    /**
     * Test the property 'entityId'
     */
    @Test
    public void entityIdTest() {
        // TODO: test entityId
    }

    /**
     * Test the property 'achievementId'
     */
    @Test
    public void achievementIdTest() {
        // TODO: test achievementId
    }

    /**
     * Test the property 'achievementName'
     */
    @Test
    public void achievementNameTest() {
        // TODO: test achievementName
    }

}
